lib.filters
-   lib.util
-   lib.voice

Module lib.filters

Filters

Functions

  ------------ --------------------------
  f:clear ()   clear a filter's history
  ------------ --------------------------

Class filters.mean

  -------------------- --------------------------------------------------
  mean.new (bufsize)   constructor
  mean:next (x)        process a new input value and update the average
  -------------------- --------------------------------------------------

Class filters.median

  ---------------------- --------------------------------------------------
  median.new (bufsize)   constructor
  median:next (x)        process a new input value and update the average
  ---------------------- --------------------------------------------------

Class filters.smoother

  ------------------------- ----------------------------------
  smoother.new (time, sr)   constructor
  f.mean                    TODO: what else would be useful?
  ------------------------- ----------------------------------

Functions

 f:clear ()
    clear a filter's history

Class filters.mean

 mean.new (bufsize)

    constructor

    Parameters:

    -   bufsize window size, cannot change after creation

 mean:next (x)

    process a new input value and update the average

    Parameters:

    -   x new input

    Returns:

Class filters.median

 median.new (bufsize)

    constructor

    Parameters:

    -   bufsize window size, cannot change after creation

 median:next (x)

    process a new input value and update the average

    Parameters:

    -   x new input

    Returns:

Class filters.smoother

 smoother.new (time, sr)

    constructor

    Parameters:

    -   time -60db convergence time
    -   sr expected sample rate

 f.mean

    TODO: what else would be useful?

    quantile estimator? constant time ramp? some kind of hysteresis /
    latching?

generated by LDoc 1.4.6 Last updated 2023-03-17 18:54:24
vim:tw=78:ts=8:ft=help:norl:
